name: Test and Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
   paths:
      - '**.py'
      - '.github/workflows/**'
      - '.flake8'
      - 'poetry.lock'
      - 'pyproject.toml'
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
    paths:
      - '**.py'
      - '.github/workflows/**'
      - '.flake8'
      - 'poetry.lock'
      - 'pyproject.toml'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:

  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          ENV: dev
          POETRY_VERSION: 1.1.10
          POSTGRES_DB: alias_db
          POSTGRES_USER: game_alias_user
          POSTGRES_PASSWORD: game_alias_password
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: install dependencies
      run: |
        pip install poetry==1.1.10
        poetry config virtualenvs.create false && poetry install --no-interaction --no-ansi

    - name: Black check
      run: |
        poetry run black . --check

    - name: Isort check
      run: |
        poetry run isort . --check -q

    - name: Lint with flake8
      run: |
        poetry run flake8 . --format="::error file=%(path)s,line=%(row)d,col=%(col)d::%(path)s:%(row)d:%(col)d: %(code)s %(text)s"

    - name: MyPy check type hints
      run: |
        poetry run mypy .
      env:
        SECRET_KEY: "015-ip(il1)_sd4mn1bh%$m$x3rl!ait1)u-+5i)dd7pcr4bp4"

    - name: Test with pytest
      run: |
        poetry run pytest alias
      env:
        SECRET_KEY: "015-ip(il1)_sd4mn1bh%$m$x3rl!ait1)u-+5i)dd7pcr4bp4"
        DATABASE_HOST: 127.0.0.1
        DATABASE_PORT: 5432
        DATABASE_NAME: alias_db
        DATABASE_USER: game_alias_user
        DATABASE_PASSWORD: game_alias_password

    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        key: ${{ secrets.SERVER_SSH_KEY }}
        host: ${{ secrets.REMOTE_HOST }}
        username: ubuntu
        port: 22
        script: |
          cd /home/ubuntu/python-projects/alias_game
          git pull
          make deploy
