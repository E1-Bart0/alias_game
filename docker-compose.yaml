version: '3'
services:

  alias_db:
    image: postgres:13
    restart: always
    container_name: alias_db
    env_file:
      - .env
    networks:
      - alias-network
    ports:
      - "127.0.0.1:${DATABASE_PORT}:5432"
    volumes:
      - alias_db_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

  alias_web:
    container_name: alias_web
    image: alias-server
    build:
      context: .
      dockerfile: dockerfiles/docker_django.conf
      args:
        POETRY_VERSION: ${POETRY_VERSION}
        ENV: ${ENV}
    env_file:
      - .env
    depends_on:
      - alias_db
    ports:
      - "${APP_HOST}:${APP_PORT}:8000"
    expose:
      - 8000
    networks:
      - alias-network
    volumes:
      - staticfiles:/app/staticfiles
    environment:
      POETRY_VERSION: ${POETRY_VERSION}
      ENV: ${ENV}
    command: bash -c "bash run_web.sh"

  alias_nginx:
    restart: always
    container_name: alias_nginx
    build:
      context: .
      dockerfile: dockerfiles/docker_nginx.conf
    env_file:
      - .env
    ports:
      - "0.0.0.0:80:80"
    expose:
      - 80
    depends_on:
      - alias_web
    networks:
      - alias-network
    volumes:
      - staticfiles:/staticfiles

networks:
  alias-network:
    external: false

volumes:
  staticfiles:
    external: false

  alias_db_volume:
    external: false
